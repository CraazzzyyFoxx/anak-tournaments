"""empty message

Revision ID: 60be498bbf6c
Revises: 1212b91f0782
Create Date: 2024-10-19 01:36:12.580322

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "60be498bbf6c"
down_revision: str | None = "1212b91f0782"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "match_assists",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("match_id", sa.BigInteger(), nullable=False),
        sa.Column("time", sa.Float(), nullable=False),
        sa.Column("round", sa.Integer(), nullable=False),
        sa.Column("team_id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("hero_id", sa.BigInteger(), nullable=False),
        sa.Column("related_team_id", sa.BigInteger(), nullable=True),
        sa.Column("related_user_id", sa.BigInteger(), nullable=True),
        sa.Column("related_hero_id", sa.BigInteger(), nullable=True),
        sa.Column(
            "name",
            sa.Enum(
                "OffensiveAssist",
                "DefensiveAssist",
                "UltimateCharged",
                "UltimateStart",
                "UltimateEnd",
                "HeroSwap",
                "MercyRez",
                "EchoDuplicateStart",
                "EchoDuplicateEnd",
                name="matchevent",
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["hero_id"], ["hero.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["match_id"], ["match.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["related_hero_id"], ["hero.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["related_team_id"], ["team.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["related_user_id"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["team_id"], ["team.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "match_kill_feed",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("match_id", sa.BigInteger(), nullable=False),
        sa.Column("time", sa.Float(), nullable=False),
        sa.Column("round", sa.Integer(), nullable=False),
        sa.Column("fight", sa.Integer(), nullable=False),
        sa.Column(
            "ability",
            sa.Enum(
                "PrimaryFire",
                "SecondaryFire",
                "Ability1",
                "Ability2",
                "Ultimate",
                "Melee",
                "Crouch",
                name="abilityevent",
            ),
            nullable=False,
        ),
        sa.Column("killer_id", sa.BigInteger(), nullable=False),
        sa.Column("killer_hero_id", sa.BigInteger(), nullable=False),
        sa.Column("killer_team_id", sa.BigInteger(), nullable=False),
        sa.Column("victim_id", sa.BigInteger(), nullable=False),
        sa.Column("victim_team_id", sa.BigInteger(), nullable=False),
        sa.Column("victim_hero_id", sa.BigInteger(), nullable=False),
        sa.Column("damage", sa.Float(), nullable=False),
        sa.Column("is_critical_hit", sa.Boolean(), nullable=False),
        sa.Column("is_environmental", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["killer_hero_id"], ["hero.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["killer_id"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["killer_team_id"], ["team.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["match_id"], ["match.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["victim_hero_id"], ["hero.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["victim_id"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["victim_team_id"], ["team.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.alter_column(
        "match",
        "time",
        existing_type=sa.INTEGER(),
        type_=sa.Float(),
        existing_nullable=False,
    )
    op.add_column("match_statistics", sa.Column("round", sa.Integer(), nullable=False))
    op.add_column(
        "match_statistics", sa.Column("team_id", sa.BigInteger(), nullable=False)
    )
    op.drop_index("ix_match_statistics_hero_id", table_name="match_statistics")
    op.drop_index("ix_match_statistics_match_id", table_name="match_statistics")
    op.drop_index("ix_match_statistics_user_id", table_name="match_statistics")
    op.create_foreign_key(
        None, "match_statistics", "team", ["team_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "match_statistics", type_="foreignkey")
    op.create_index(
        "ix_match_statistics_user_id", "match_statistics", ["user_id"], unique=False
    )
    op.create_index(
        "ix_match_statistics_match_id", "match_statistics", ["match_id"], unique=False
    )
    op.create_index(
        "ix_match_statistics_hero_id", "match_statistics", ["hero_id"], unique=False
    )
    op.drop_column("match_statistics", "team_id")
    op.drop_column("match_statistics", "round")
    op.alter_column(
        "match",
        "time",
        existing_type=sa.Float(),
        type_=sa.INTEGER(),
        existing_nullable=False,
    )
    op.drop_table("match_kill_feed")
    op.drop_table("match_assists")
    # ### end Alembic commands ###
