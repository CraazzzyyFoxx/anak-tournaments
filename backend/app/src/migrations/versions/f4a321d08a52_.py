"""empty message

Revision ID: f4a321d08a52
Revises: a82dd80b2fb7
Create Date: 2024-08-19 20:32:28.554004

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f4a321d08a52"
down_revision: str | None = "a82dd80b2fb7"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "match",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("home_team_id", sa.BigInteger(), nullable=False),
        sa.Column("away_team_id", sa.BigInteger(), nullable=False),
        sa.Column("home_score", sa.Integer(), nullable=False),
        sa.Column("away_score", sa.Integer(), nullable=False),
        sa.Column("time", sa.Integer(), nullable=False),
        sa.Column("encounter_id", sa.BigInteger(), nullable=False),
        sa.Column("map_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(["away_team_id"], ["team.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["encounter_id"], ["encounter.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["home_team_id"], ["team.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["map_id"], ["map.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "match_statistics",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("match_id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("hero_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "name",
            sa.Enum(
                "Eliminations",
                "FinalBlows",
                "Deaths",
                "AllDamageDealt",
                "BarrierDamageDealt",
                "HeroDamageDealt",
                "HealingDealt",
                "HealingReceived",
                "SelfHealing",
                "DamageTaken",
                "DamageBlocked",
                "DefensiveAssists",
                "OffensiveAssists",
                "UltimatesEarned",
                "UltimatesUsed",
                "MultikillBest",
                "Multikills",
                "SoloKills",
                "ObjectiveKills",
                "EnvironmentalKills",
                "EnvironmentalDeaths",
                "CriticalHits",
                "CriticalHitAccuracy",
                "ScopedAccuracy",
                "ScopedCriticalHitAccuracy",
                "ScopedCriticalHitKills",
                "ShotsFired",
                "ShotsHit",
                "ShotsMissed",
                "ScopedShotsFired",
                "ScopedShotsHit",
                "WeaponAccuracy",
                "HeroTimePlayed",
                "Performance",
                "PerformancePoints",
                "KD",
                "KDA",
                "DamageDelta",
                "FBE",
                "DamageFB",
                "Assists",
                name="logstatsname",
            ),
            nullable=False,
        ),
        sa.Column("value", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(["hero_id"], ["hero.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["match_id"], ["match.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("match_statistics")
    op.drop_table("match")
    # ### end Alembic commands ###
